/*
 *  SPDMetrics.h
 *  SPDLIB
 *
 *  Created by Pete Bunting on 26/02/2011.
 *  Copyright 2011 SPDLib. All rights reserved.
 *
 *  This file is part of SPDLib.
 *
 *  SPDLib is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  SPDLib is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with SPDLib.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#ifndef SPDMetrics_H
#define SPDMetrics_H

#include <iostream>
#include <vector>
#include <math.h>
#include <algorithm>

#include "gsl/gsl_statistics_double.h"

#include "gdal_priv.h"
#include "ogrsf_frmts.h"
#include "ogr_api.h"

#include "spd/cmpfit/mpfit.h"

#include <boost/cstdint.hpp>
#include <boost/numeric/conversion/cast.hpp>
#include "boost/math/special_functions/fpclassify.hpp"

#include "spd/SPDException.h"
#include "spd/SPDFile.h"
#include "spd/SPDPoint.h"
#include "spd/SPDPulse.h"
#include "spd/SPDProcessingException.h"
#include "spd/SPDPointGridIndex.h"

// mark all exported classes/functions with DllExport to have
// them exported by Visual Studio
#undef DllExport
#ifdef _MSC_VER
    #ifdef libspd_EXPORTS
        #define DllExport   __declspec( dllexport )
    #else
        #define DllExport   __declspec( dllimport )
    #endif
#else
    #define DllExport
#endif

namespace spdlib{

	class DllExport SPDMetric
	{
	public:
		SPDMetric(){};
		virtual double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom)  = 0;
		virtual ~SPDMetric(){};
	};

    class DllExport SPDMetricAdd : public SPDMetric
	{
	public:
		SPDMetricAdd(std::vector<SPDMetric*> *metrics)
        {
            this->metrics = metrics;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            double value = 0;
            for(std::vector<SPDMetric*>::iterator iterMetrics = metrics->begin(); iterMetrics != metrics->end(); ++iterMetrics)
            {
                value += (*iterMetrics)->calcValue(pulses, spdFile, geom);
            }
            return value;
        };
		~SPDMetricAdd(){};
    private:
        std::vector<SPDMetric*> *metrics;
	};

    class DllExport SPDMetricMinus : public SPDMetric
	{
	public:
		SPDMetricMinus(SPDMetric *metric1, SPDMetric *metric2)
        {
            this->metric1 = metric1;
            this->metric2 = metric2;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return metric1->calcValue(pulses, spdFile, geom) - metric2->calcValue(pulses, spdFile, geom);
        };
		~SPDMetricMinus(){};
    private:
        SPDMetric *metric1;
        SPDMetric *metric2;
	};

    class DllExport SPDMetricMultiply : public SPDMetric
	{
	public:
		SPDMetricMultiply(std::vector<SPDMetric*> *metrics)
        {
            this->metrics = metrics;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            double value = 0;
            for(std::vector<SPDMetric*>::iterator iterMetrics = metrics->begin(); iterMetrics != metrics->end(); ++iterMetrics)
            {
                if(iterMetrics == metrics->begin()) {
                    value = (*iterMetrics)->calcValue(pulses, spdFile, geom);
                } else {
                    value *= (*iterMetrics)->calcValue(pulses, spdFile, geom);
                }
            }
            return value;
        };
		~SPDMetricMultiply(){};
    private:
        std::vector<SPDMetric*> *metrics;
	};

    class DllExport SPDMetricDivide : public SPDMetric
	{
	public:
		SPDMetricDivide(SPDMetric *metric1, SPDMetric *metric2)
        {
            this->metric1 = metric1;
            this->metric2 = metric2;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return metric1->calcValue(pulses, spdFile, geom) / metric2->calcValue(pulses, spdFile, geom);
        };
		~SPDMetricDivide(){};
    private:
        SPDMetric *metric1;
        SPDMetric *metric2;
	};

    class DllExport SPDMetricPow : public SPDMetric
	{
	public:
		SPDMetricPow(SPDMetric *metric1, SPDMetric *metric2)
        {
            this->metric1 = metric1;
            this->metric2 = metric2;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return pow(metric1->calcValue(pulses, spdFile, geom), metric2->calcValue(pulses, spdFile, geom));
        };
		~SPDMetricPow(){};
    private:
        SPDMetric *metric1;
        SPDMetric *metric2;
	};

    class DllExport SPDMetricAbs : public SPDMetric
	{
	public:
		SPDMetricAbs(SPDMetric *metric)
        {
            this->metric = metric;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return fabs(metric->calcValue(pulses, spdFile, geom));
        };
		~SPDMetricAbs(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricSqrt : public SPDMetric
	{
	public:
		SPDMetricSqrt(SPDMetric *metric)
        {
            this->metric = metric;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return sqrt(metric->calcValue(pulses, spdFile, geom));
        };
		~SPDMetricSqrt(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricSine : public SPDMetric
	{
	public:
		SPDMetricSine(SPDMetric *metric)
        {
            this->metric = metric;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return sin(metric->calcValue(pulses, spdFile, geom));
        };
		~SPDMetricSine(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricCosine : public SPDMetric
	{
	public:
		SPDMetricCosine(SPDMetric *metric)
        {
            this->metric = metric;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return cos(metric->calcValue(pulses, spdFile, geom));
        };
		~SPDMetricCosine(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricTangent : public SPDMetric
	{
	public:
		SPDMetricTangent(SPDMetric *metric)
        {
            this->metric = metric;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return tan(metric->calcValue(pulses, spdFile, geom));
        };
		~SPDMetricTangent(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricInvSine : public SPDMetric
	{
	public:
		SPDMetricInvSine(SPDMetric *metric)
        {
            this->metric = metric;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return asin(metric->calcValue(pulses, spdFile, geom));
        };
		~SPDMetricInvSine(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricInvCos : public SPDMetric
	{
	public:
		SPDMetricInvCos(SPDMetric *metric)
        {
            this->metric = metric;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return acos(metric->calcValue(pulses, spdFile, geom));
        };
		~SPDMetricInvCos(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricInvTan : public SPDMetric
	{
	public:
		SPDMetricInvTan(SPDMetric *metric)
        {
            this->metric = metric;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return atan(metric->calcValue(pulses, spdFile, geom));
        };
		~SPDMetricInvTan(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricLog10 : public SPDMetric
	{
	public:
		SPDMetricLog10(SPDMetric *metric)
        {
            this->metric = metric;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return log10(metric->calcValue(pulses, spdFile, geom));
        };
		~SPDMetricLog10(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricLn : public SPDMetric
	{
	public:
		SPDMetricLn(SPDMetric *metric)
        {
            this->metric = metric;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return log(metric->calcValue(pulses, spdFile, geom));
        };
		~SPDMetricLn(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricExp : public SPDMetric
	{
	public:
		SPDMetricExp(SPDMetric *metric)
        {
            this->metric = metric;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return exp(metric->calcValue(pulses, spdFile, geom));
        };
		~SPDMetricExp(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricPercentage : public SPDMetric
	{
	public:
		SPDMetricPercentage(SPDMetric *metric1, SPDMetric *metric2)
        {
            this->metric1 = metric1;
            this->metric2 = metric2;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return (metric1->calcValue(pulses, spdFile, geom) / metric2->calcValue(pulses, spdFile, geom)) * 100;
        };
		~SPDMetricPercentage(){};
    private:
        SPDMetric *metric1;
        SPDMetric *metric2;
	};

    class DllExport SPDMetricAddConst : public SPDMetric
	{
	public:
		SPDMetricAddConst(SPDMetric *metric, double constVal)
        {
            this->metric = metric;
            this->constVal = constVal;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return metric->calcValue(pulses, spdFile, geom) + constVal;
        };
		~SPDMetricAddConst(){};
    private:
        SPDMetric *metric;
        double constVal;
	};

	class DllExport SPDMetricMinusConstFrom : public SPDMetric
	{
	public:
		SPDMetricMinusConstFrom(SPDMetric *metric, double constVal)
        {
            this->metric = metric;
            this->constVal = constVal;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return metric->calcValue(pulses, spdFile, geom) - constVal;
        };
		~SPDMetricMinusConstFrom(){};
    private:
        SPDMetric *metric;
        double constVal;
	};

    class DllExport SPDMetricMinusFromConst : public SPDMetric
	{
	public:
		SPDMetricMinusFromConst(SPDMetric *metric, double constVal)
        {
            this->metric = metric;
            this->constVal = constVal;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return constVal - metric->calcValue(pulses, spdFile, geom);
        };
		~SPDMetricMinusFromConst(){};
    private:
        SPDMetric *metric;
        double constVal;
	};

    class DllExport SPDMetricMultiplyConst : public SPDMetric
	{
	public:
		SPDMetricMultiplyConst(SPDMetric *metric, double constVal)
        {
            this->metric = metric;
            this->constVal = constVal;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return constVal * metric->calcValue(pulses, spdFile, geom);
        };
		~SPDMetricMultiplyConst(){};
    private:
        SPDMetric *metric;
        double constVal;
	};

    class DllExport SPDMetricDivideByConst : public SPDMetric
	{
	public:
		SPDMetricDivideByConst(SPDMetric *metric, double constVal)
        {
            this->metric = metric;
            this->constVal = constVal;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return metric->calcValue(pulses, spdFile, geom) / constVal;
        };
		~SPDMetricDivideByConst(){};
    private:
        SPDMetric *metric;
        double constVal;
	};

    class DllExport SPDMetricDivideConstBy : public SPDMetric
	{
	public:
		SPDMetricDivideConstBy(SPDMetric *metric, double constVal)
        {
            this->metric = metric;
            this->constVal = constVal;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return constVal / metric->calcValue(pulses, spdFile, geom);
        };
		~SPDMetricDivideConstBy(){};
    private:
        SPDMetric *metric;
        double constVal;
	};

    class DllExport SPDMetricPowMetricConst : public SPDMetric
	{
	public:
		SPDMetricPowMetricConst(SPDMetric *metric, double constVal)
        {
            this->metric = metric;
            this->constVal = constVal;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return pow(metric->calcValue(pulses, spdFile, geom), constVal);
        };
		~SPDMetricPowMetricConst(){};
    private:
        SPDMetric *metric;
        double constVal;
	};

    class DllExport SPDMetricPowConstMetric : public SPDMetric
	{
	public:
		SPDMetricPowConstMetric(SPDMetric *metric, double constVal)
        {
            this->metric = metric;
            this->constVal = constVal;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            return pow(constVal, metric->calcValue(pulses, spdFile, geom));
        };
		~SPDMetricPowConstMetric(){};
    private:
        SPDMetric *metric;
        double constVal;
	};

    class DllExport SPDMetricCalc : public SPDMetric
	{
	public:
		SPDMetricCalc(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1)
        {
            this->returnID = returnID;
            this->classification = classification;
            this->minNumReturns = minNumReturns;
            this->upThreshold = upThreshold;
            this->lowThreshold = lowThreshold;
            this->heightUpThreshold = heightUpThreshold;
            this->heightLowThreshold = heightLowThreshold;
        }
		virtual double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom)  = 0;
		virtual ~SPDMetricCalc(){};
    protected:
        virtual std::vector<double>* getPointsValuesWithinHeightParameters(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            std::vector<double> *points = new std::vector<double>();
            // If there is waveform data and the minimum number of returns has been set to 0
            if((spdFile->getReceiveWaveformDefined() == SPD_TRUE) & (this->minNumReturns == 0))
            {
                double tmpX = 0;
                double tmpY = 0;
                double tmpH = 0;

                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    for(unsigned int s = 0; s < (*iterPulses)->numOfReceivedBins; s++)
                    {
                        // Get the DN of the digitised value and check
                        // this is above the noise threshold.
                        double pulseDNVal = (*iterPulses)->received[s];

                        if(pulseDNVal > (*iterPulses)->receiveWaveNoiseThreshold)
                        {
                            // Get the time of the digitised value, relative to the origin
                            double timeOffset = s * spdFile->getTemporalBinSpacing();

                            // Get the height of the digitised value using the height of the origin
                            // and the time offset within the pulse.
                            SPDConvertToCartesian((*iterPulses)->zenith, (*iterPulses)->azimuth, 
                                                (SPD_SPEED_OF_LIGHT_NS * timeOffset), (*iterPulses)->x0, (*iterPulses)->y0, (*iterPulses)->h0, &tmpX, &tmpY, &tmpH);

                            if((boost::math::isnan(this->upThreshold)) & (boost::math::isnan(this->lowThreshold)))
                            {
                                points->push_back(tmpH);
                            }
                            else if((boost::math::isnan(this->lowThreshold)) & (tmpH <= this->upThreshold))
                            {
                                points->push_back(tmpH);
                            }
                            else if((tmpH >= this->lowThreshold) & (boost::math::isnan(this->upThreshold)))
                            {
                                points->push_back(tmpH);
                            }
                            else if((tmpH >= this->lowThreshold) & (tmpH <= this->upThreshold))
                            {
                                points->push_back(tmpH);
                            }

                        }
                    }
                }
            }
            else if((spdFile->getDecomposedPtDefined() == SPD_TRUE) | (spdFile->getDiscretePtDefined() == SPD_TRUE))
            {
                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    if(((*iterPulses)->numberOfReturns >= minNumReturns) & ((*iterPulses)->numberOfReturns > 0))
                    {
                        if(returnID == SPD_ALL_RETURNS)
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->height <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                }
                                else if(((*iterPts)->height >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                }
                                else if(((*iterPts)->height >= lowThreshold) & ((*iterPts)->height <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_LAST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->back();
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->height);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->height);
                                }
                            }
                            else if(boost::math::isnan(lowThreshold) & (pt->height <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->height);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->height);
                                }
                            }
                            else if((pt->height >= lowThreshold) & boost::math::isnan(upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->height);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->height);
                                }
                            }
                            else if((pt->height >= lowThreshold) & (pt->height <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->height);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->height);
                                }
                            }
                        }
                        else if(returnID == SPD_FIRST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->front();
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->height);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->height);
                                }
                            }
                            else if(boost::math::isnan(lowThreshold) & (pt->height <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->height);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->height);
                                }
                            }
                            else if((pt->height >= lowThreshold) & boost::math::isnan(upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->height);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->height);
                                }
                            }
                            else if((pt->height >= lowThreshold) & (pt->height <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->height);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->height);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->height);
                                }
                            }
                        }
                        else if(returnID == SPD_FIRSTLAST_RETURNS)
                        {
                            SPDPoint *ptFirst = (*iterPulses)->pts->front();
                            SPDPoint *ptLast = NULL;
                            if((*iterPulses)->pts->size() > 1)
                            {
                                ptLast = (*iterPulses)->pts->back();
                            }
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                // First
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(ptFirst->height);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                         (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                         (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(ptFirst->height);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (ptFirst->classification != SPD_GROUND))
                                {
                                    points->push_back(ptFirst->height);
                                }
                                else if(ptFirst->classification == classification)
                                {
                                    points->push_back(ptFirst->height);
                                }

                                // Last
                                if(ptLast != NULL)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptLast->height);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptLast->classification == SPD_LOW_VEGETATION) |
                                             (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptLast->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptLast->height);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptLast->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptLast->height);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptLast->height);
                                    }
                                }
                            }
                            else if(boost::math::isnan(lowThreshold))
                            {
                                if(ptFirst->height <= upThreshold)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->height);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->height);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->height);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->height);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->height <= upThreshold)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->height);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->height);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->height);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast->height);
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(upThreshold))
                            {
                                if(ptFirst->height >= lowThreshold)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->height);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->height);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->height);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->height);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->height >= lowThreshold)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->height);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->height);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->height);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast->height);
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if((ptFirst->height >= lowThreshold) & (ptFirst->height <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->height);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->height);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->height);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->height);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if((ptLast->height >= lowThreshold) & (ptLast->height <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->height);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->height);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->height);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast->height);
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_NOTFIRST_RETURNS)
                        {
                            std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin();
                            ++iterPts;
                            for(; iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->height <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                }
                                else if(((*iterPts)->height >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                }
                                else if(((*iterPts)->height >= lowThreshold) & ((*iterPts)->height <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->height);
                                    }
                                }
                            }
                        }
                        else
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->height <= upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= lowThreshold) & ((*iterPts)->height <= upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->height);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else if((spdFile->getReceiveWaveformDefined() == SPD_TRUE) & this->minNumReturns != 0)
            {
                throw SPDProcessingException("There are no points and the number of returns has been set to a number > 0."
                                             " Either set 'minNumReturns' to 0 or run decomposition");
            }
            else
            {
                throw SPDProcessingException("Neither waveform or point returns have been defind.");
            }

            return points;
        };
        virtual std::vector<double>* getPointsValuesWithinZParameters(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            std::vector<double> *points = new std::vector<double>();
            if((spdFile->getReceiveWaveformDefined() == SPD_TRUE) & (this->minNumReturns == 0))
            {
                double tmpX = 0;
                double tmpY = 0;
                double tmpZ = 0;

                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    for(unsigned int s = 0; s < (*iterPulses)->numOfReceivedBins; s++)
                    {
                        // Get the DN of the digitised value and check
                        // this is above the noise threshold.
                        double pulseDNVal = (*iterPulses)->received[s];

                        if(pulseDNVal > (*iterPulses)->receiveWaveNoiseThreshold)
                        {
                            // Get the time of the digitised value, relative to the origin
                            double timeOffset = s * spdFile->getTemporalBinSpacing();

                            // Get the height of the digitised value using the height of the origin
                            // and the time offset within the pulse.
                            SPDConvertToCartesian((*iterPulses)->zenith, (*iterPulses)->azimuth, 
                                                (SPD_SPEED_OF_LIGHT_NS * timeOffset), (*iterPulses)->x0, (*iterPulses)->y0, (*iterPulses)->z0, &tmpX, &tmpY, &tmpZ);

                            if((boost::math::isnan(this->upThreshold)) & (boost::math::isnan(this->lowThreshold)))
                            {
                                points->push_back(tmpZ);
                            }
                            else if((boost::math::isnan(this->lowThreshold)) & (tmpZ <= this->upThreshold))
                            {
                                points->push_back(tmpZ);
                            }
                            else if((tmpZ >= this->lowThreshold) & (boost::math::isnan(this->upThreshold)))
                            {
                                points->push_back(tmpZ);
                            }
                            else if((tmpZ >= this->lowThreshold) & (tmpZ <= this->upThreshold))
                            {
                                points->push_back(tmpZ);
                            }

                        }
                    }
                }
            }
            else if((spdFile->getDecomposedPtDefined() == SPD_TRUE) | (spdFile->getDiscretePtDefined() == SPD_TRUE))
            {
                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    if(((*iterPulses)->numberOfReturns >= minNumReturns) & ((*iterPulses)->numberOfReturns > 0))
                    {
                        if(returnID == SPD_ALL_RETURNS)
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->z <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                }
                                else if(((*iterPts)->z >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                }
                                else if(((*iterPts)->z >= lowThreshold) & ((*iterPts)->z <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_LAST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->back();
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->z);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->z);
                                }
                            }
                            else if(boost::math::isnan(lowThreshold) & (pt->z <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->z);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->z);
                                }
                            }
                            else if((pt->z >= lowThreshold) & boost::math::isnan(upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->z);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->z);
                                }
                            }
                            else if((pt->z >= lowThreshold) & (pt->z <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->z);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->z);
                                }
                            }
                        }
                        else if(returnID == SPD_FIRST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->front();
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->z);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->z);
                                }
                            }
                            else if(boost::math::isnan(lowThreshold) & (pt->z <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->z);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->z);
                                }
                            }
                            else if((pt->z >= lowThreshold) & boost::math::isnan(upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->z);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->z);
                                }
                            }
                            else if((pt->z >= lowThreshold) & (pt->z <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->z);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->z);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->z);
                                }
                            }
                        }
                        else if(returnID == SPD_FIRSTLAST_RETURNS)
                        {
                            SPDPoint *ptFirst = (*iterPulses)->pts->front();
                            SPDPoint *ptLast = NULL;
                            if((*iterPulses)->pts->size() > 1)
                            {
                                ptLast = (*iterPulses)->pts->back();
                            }
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                // First
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(ptFirst->z);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                         (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                         (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(ptFirst->z);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (ptFirst->classification != SPD_GROUND))
                                {
                                    points->push_back(ptFirst->z);
                                }
                                else if(ptFirst->classification == classification)
                                {
                                    points->push_back(ptFirst->z);
                                }

                                // Last
                                if(ptLast != NULL)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptLast->z);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptLast->classification == SPD_LOW_VEGETATION) |
                                             (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptLast->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptLast->z);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptLast->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptLast->z);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptLast->z);
                                    }
                                }
                            }
                            else if(boost::math::isnan(lowThreshold))
                            {
                                if(ptFirst->z <= upThreshold)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->z);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->z);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->z);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->z);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->z <= upThreshold)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->z);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->z);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->z);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast->z);
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(upThreshold))
                            {
                                if(ptFirst->z >= lowThreshold)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->z);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->z);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->z);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->z);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->z >= lowThreshold)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->z);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->z);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->z);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast->z);
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if((ptFirst->z >= lowThreshold) & (ptFirst->z <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->z);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->z);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->z);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->z);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if((ptLast->z >= lowThreshold) & (ptLast->z <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->z);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->z);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->z);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast->z);
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_NOTFIRST_RETURNS)
                        {
                            std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin();
                            ++iterPts;
                            for(; iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->z <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                }
                                else if(((*iterPts)->z >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                }
                                else if(((*iterPts)->z >= lowThreshold) & ((*iterPts)->z <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->z);
                                    }
                                }
                            }
                        }
                        else
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->z <= upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                    }
                                }
                                else if(((*iterPts)->z >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                    }
                                }
                                else if(((*iterPts)->z >= lowThreshold) & ((*iterPts)->z <= upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->z);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else if((spdFile->getReceiveWaveformDefined() == SPD_TRUE) & this->minNumReturns != 0)
            {
                throw SPDProcessingException("There are no points and the number of returns has been set to a number > 0."
                                             " Either set 'minNumReturns' to 0 or run decomposition");
            }
            else
            {
                throw SPDProcessingException("Neither waveform or point returns have been defind.");
            }

            return points;
        };
        virtual std::vector<double>* getPointsValuesWithinAmplitudeParameters(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            std::vector<double> *points = new std::vector<double>();
            // If there is waveform data and the minimum number of returns has been set to 0
            if((spdFile->getReceiveWaveformDefined() == SPD_TRUE) & (this->minNumReturns == 0))
            {
                // Get amplitude values for all returns of pulses in geom with amplitude falling between lowThreshold and upThreshold.
                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    for(unsigned int s = 0; s < (*iterPulses)->numOfReceivedBins; s++)
                    {
                        double pulseDNVal = (*iterPulses)->received[s];
                        if(pulseDNVal > (*iterPulses)->receiveWaveNoiseThreshold)
                        {
                            if((boost::math::isnan(this->upThreshold)) & (boost::math::isnan(this->lowThreshold)))
                            {
                                points->push_back(pulseDNVal);
                            }
                            else if((boost::math::isnan(this->lowThreshold)) & (pulseDNVal <= this->upThreshold))
                            {
                                points->push_back(pulseDNVal);
                            }
                            else if((pulseDNVal >= this->lowThreshold) & (boost::math::isnan(this->upThreshold)))
                            {
                                points->push_back(pulseDNVal);
                            }
                            else if((pulseDNVal >= this->lowThreshold) & (pulseDNVal <= this->upThreshold))
                            {
                                points->push_back(pulseDNVal);
                            }
                        }
                    }
                }
            }
            else if((spdFile->getDecomposedPtDefined() == SPD_TRUE) | (spdFile->getDiscretePtDefined() == SPD_TRUE))
            {
                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    if(((*iterPulses)->numberOfReturns >= minNumReturns) & ((*iterPulses)->numberOfReturns > 0))
                    {
                        if(returnID == SPD_ALL_RETURNS)
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_LAST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->back();
                            if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                            }
                            else if(boost::math::isnan(heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_FIRST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->front();
                            if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                            }
                            else if(boost::math::isnan(heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->amplitudeReturn);
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_FIRSTLAST_RETURNS)
                        {
                            SPDPoint *ptFirst = (*iterPulses)->pts->front();
                            SPDPoint *ptLast = NULL;
                            if((*iterPulses)->pts->size() > 1)
                            {
                                ptLast = (*iterPulses)->pts->back();
                            }
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                // First
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                }
                                else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                }
                                else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->amplitudeReturn);
                                    }
                                }

                                // Last
                                if(ptLast != NULL)
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                    }
                                    else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                    }
                                    else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast->amplitudeReturn);
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(lowThreshold))
                            {
                                if(ptFirst->amplitudeReturn <= upThreshold)
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->amplitudeReturn <= upThreshold)
                                    {
                                        if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                        }
                                        else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(upThreshold))
                            {
                                if(ptFirst->amplitudeReturn >= lowThreshold)
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->amplitudeReturn >= lowThreshold)
                                    {
                                        if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                        }
                                        else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if((ptFirst->amplitudeReturn >= lowThreshold) & (ptFirst->amplitudeReturn <= upThreshold))
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->amplitudeReturn);
                                        }
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if((ptLast->amplitudeReturn >= lowThreshold) & (ptLast->amplitudeReturn <= upThreshold))
                                    {
                                        if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                        }
                                        else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->amplitudeReturn);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_NOTFIRST_RETURNS)
                        {
                            std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin();
                            ++iterPts;
                            for(; iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->amplitudeReturn);
                                        }
                                    }
                                }
                            }
                        }
                        else
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->amplitudeReturn);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else if((spdFile->getReceiveWaveformDefined() == SPD_TRUE) & this->minNumReturns != 0)
            {
                throw SPDProcessingException("There are no points and the number of returns has been set to a number > 0."
                                             " Either set 'minNumReturns' to 0 or run decomposition");
            }
            else
            {
                throw SPDProcessingException("Neither waveform or point returns have been defind.");
            }
            return points;
        };
        virtual std::vector<double>* getPointsValuesWithinRangeParameters(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            std::vector<double> *points = new std::vector<double>();
            if((spdFile->getReceiveWaveformDefined() == SPD_TRUE) & (this->minNumReturns == 0))
            {
                throw SPDProcessingException("Waveform metrics haven't been implemented for range."
                                             " Set minNumReturns to 1 (default) to calculate using returns");
            }
            else if((spdFile->getDecomposedPtDefined() == SPD_TRUE) | (spdFile->getDiscretePtDefined() == SPD_TRUE))
            {
                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    if(((*iterPulses)->numberOfReturns >= minNumReturns) & ((*iterPulses)->numberOfReturns > 0))
                    {
                        if(returnID == SPD_ALL_RETURNS)
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->range <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                }
                                else if(((*iterPts)->range >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                }
                                else if(((*iterPts)->range >= lowThreshold) & ((*iterPts)->range <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_LAST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->back();
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->range);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->range);
                                }
                            }
                            else if(boost::math::isnan(lowThreshold) & (pt->range <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->range);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->range);
                                }
                            }
                            else if((pt->range >= lowThreshold) & boost::math::isnan(upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->range);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->range);
                                }
                            }
                            else if((pt->range >= lowThreshold) & (pt->range <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->range);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->range);
                                }
                            }
                        }
                        else if(returnID == SPD_FIRST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->front();
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->range);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->range);
                                }
                            }
                            else if(boost::math::isnan(lowThreshold) & (pt->range <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->range);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->range);
                                }
                            }
                            else if((pt->range >= lowThreshold) & boost::math::isnan(upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->range);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->range);
                                }
                            }
                            else if((pt->range >= lowThreshold) & (pt->range <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt->range);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt->range);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt->range);
                                }
                            }
                        }
                        else if(returnID == SPD_FIRSTLAST_RETURNS)
                        {
                            SPDPoint *ptFirst = (*iterPulses)->pts->front();
                            SPDPoint *ptLast = NULL;
                            if((*iterPulses)->pts->size() > 1)
                            {
                                ptLast = (*iterPulses)->pts->back();
                            }
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                // First
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(ptFirst->range);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                         (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                         (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(ptFirst->range);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (ptFirst->classification != SPD_GROUND))
                                {
                                    points->push_back(ptFirst->range);
                                }
                                else if(ptFirst->classification == classification)
                                {
                                    points->push_back(ptFirst->range);
                                }

                                // Last
                                if(ptLast != NULL)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptLast->range);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptLast->classification == SPD_LOW_VEGETATION) |
                                             (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptLast->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptLast->range);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptLast->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptLast->range);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptLast->range);
                                    }
                                }
                            }
                            else if(boost::math::isnan(lowThreshold))
                            {
                                if(ptFirst->range <= upThreshold)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->range);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->range);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->range);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->range);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->range <= upThreshold)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->range);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->range);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->range);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast->range);
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(upThreshold))
                            {
                                if(ptFirst->range >= lowThreshold)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->range);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->range);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->range);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->range);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->range >= lowThreshold)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->range);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->range);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->range);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast->range);
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if((ptFirst->range >= lowThreshold) & (ptFirst->range <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->range);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->range);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->range);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->range);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if((ptLast->range >= lowThreshold) & (ptLast->range <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->range);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->range);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->range);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast->range);
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_NOTFIRST_RETURNS)
                        {
                            std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin();
                            ++iterPts;
                            for(; iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->range <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                }
                                else if(((*iterPts)->range >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                }
                                else if(((*iterPts)->range >= lowThreshold) & ((*iterPts)->range <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back((*iterPts)->range);
                                    }
                                }
                            }
                        }
                        else
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->range <= upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                    }
                                }
                                else if(((*iterPts)->range >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                    }
                                }
                                else if(((*iterPts)->range >= lowThreshold) & ((*iterPts)->range <= upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->range);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else if(spdFile->getReceiveWaveformDefined() == SPD_TRUE)
            {
                throw SPDProcessingException("Use the waveform metrics for waveform only data or decomposed to retrieve points.");
            }
            else
            {
                throw SPDProcessingException("Neither waveform or point returns have been defind.");
            }
            return points;
        };
        virtual std::vector<double>* getPointsValuesWithinWidthParameters(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            std::vector<double> *points = new std::vector<double>();
            if((spdFile->getReceiveWaveformDefined() == SPD_TRUE) & (this->minNumReturns == 0))
            {
                throw SPDProcessingException("Can't calculate width metrics using only waveform data, need to use returns."
                                             " Set minNumReturns to 1 (default) to calculate using returns.");
            }
            else if((spdFile->getDecomposedPtDefined() == SPD_TRUE) | (spdFile->getDiscretePtDefined() == SPD_TRUE))
            {
                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    if(((*iterPulses)->numberOfReturns >= minNumReturns) & ((*iterPulses)->numberOfReturns > 0))
                    {
                        if(returnID == SPD_ALL_RETURNS)
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_LAST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->back();
                            if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                            }
                            else if(boost::math::isnan(heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_FIRST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->front();
                            if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                            }
                            else if(boost::math::isnan(heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt->widthReturn);
                                    }
                                }

                            }
                        }
                        else if(returnID == SPD_FIRSTLAST_RETURNS)
                        {
                            SPDPoint *ptFirst = (*iterPulses)->pts->front();
                            SPDPoint *ptLast = NULL;
                            if((*iterPulses)->pts->size() > 1)
                            {
                                ptLast = (*iterPulses)->pts->back();
                            }
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                // First
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                }
                                else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                }
                                else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst->widthReturn);
                                    }
                                }

                                // Last
                                if(ptLast != NULL)
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                    }
                                    else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                    }
                                    else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast->widthReturn);
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(lowThreshold))
                            {
                                if(ptFirst->widthReturn <= upThreshold)
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->widthReturn <= upThreshold)
                                    {
                                        if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                        }
                                        else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(upThreshold))
                            {
                                if(ptFirst->widthReturn >= lowThreshold)
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->widthReturn >= lowThreshold)
                                    {
                                        if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                        }
                                        else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                        }
                                    }
                                }
                            }
                            else
                            {
                                //First
                                if((ptFirst->widthReturn >= lowThreshold) & (ptFirst->widthReturn <= upThreshold))
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst->widthReturn);
                                        }
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if((ptLast->widthReturn >= lowThreshold) & (ptLast->widthReturn <= upThreshold))
                                    {
                                        if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                        }
                                        else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast->widthReturn);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_NOTFIRST_RETURNS)
                        {
                            std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin();
                            ++iterPts;
                            for(; iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts)->widthReturn);
                                        }
                                    }
                                }
                            }
                        }
                        else
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts)->widthReturn);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else if(spdFile->getReceiveWaveformDefined() == SPD_TRUE)
            {
                throw SPDProcessingException("Use the waveform metrics for waveform only data or decomposed to retrieve points.");
            }
            else
            {
                throw SPDProcessingException("Neither waveform or point returns have been defind.");
            }
            return points;
        };
        virtual std::vector<SPDPoint*>* getPointsWithinHeightParameters(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            std::vector<SPDPoint*> *points = new std::vector<SPDPoint*>();
            if((spdFile->getReceiveWaveformDefined() == SPD_TRUE) & (this->minNumReturns == 0))
            {
                throw SPDProcessingException("This metric can't be calculated from waveform data."
                                             " Set minNumReturns to 1 (default) to calculate using returns");
            }
            else if((spdFile->getDecomposedPtDefined() == SPD_TRUE) | (spdFile->getDiscretePtDefined() == SPD_TRUE))
            {
                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    if(((*iterPulses)->numberOfReturns >= minNumReturns) & ((*iterPulses)->numberOfReturns > 0))
                    {
                        if(returnID == SPD_ALL_RETURNS)
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->height <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(((*iterPts)->height >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(((*iterPts)->height >= lowThreshold) & ((*iterPts)->height <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_LAST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->back();
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if(boost::math::isnan(lowThreshold) & (pt->height <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if((pt->height >= lowThreshold) & boost::math::isnan(upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if((pt->height >= lowThreshold) & (pt->height <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                        }
                        else if(returnID == SPD_FIRST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->front();
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if(boost::math::isnan(lowThreshold) & (pt->height <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if((pt->height >= lowThreshold) & boost::math::isnan(upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if((pt->height >= lowThreshold) & (pt->height <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                        }
                        else if(returnID == SPD_FIRSTLAST_RETURNS)
                        {
                            SPDPoint *ptFirst = (*iterPulses)->pts->front();
                            SPDPoint *ptLast = NULL;
                            if((*iterPulses)->pts->size() > 1)
                            {
                                ptLast = (*iterPulses)->pts->back();
                            }
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                // First
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(ptFirst);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                         (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                         (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(ptFirst);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (ptFirst->classification != SPD_GROUND))
                                {
                                    points->push_back(ptFirst);
                                }
                                else if(ptFirst->classification == classification)
                                {
                                    points->push_back(ptFirst);
                                }

                                // Last
                                if(ptLast != NULL)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptLast);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptLast->classification == SPD_LOW_VEGETATION) |
                                             (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptLast->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptLast);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptLast->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptLast);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptLast);
                                    }
                                }
                            }
                            else if(boost::math::isnan(lowThreshold))
                            {
                                if(ptFirst->height <= upThreshold)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->height <= upThreshold)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(upThreshold))
                            {
                                if(ptFirst->height >= lowThreshold)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->height >= lowThreshold)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if((ptFirst->height >= lowThreshold) & (ptFirst->height <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if((ptLast->height >= lowThreshold) & (ptLast->height <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_NOTFIRST_RETURNS)
                        {
                            std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin();
                            ++iterPts;
                            for(; iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->height <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(((*iterPts)->height >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(((*iterPts)->height >= lowThreshold) & ((*iterPts)->height <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                            }
                        }
                        else
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->height <= upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= lowThreshold) & ((*iterPts)->height <= upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else if(spdFile->getReceiveWaveformDefined() == SPD_TRUE)
            {
                throw SPDProcessingException("Use the waveform metrics for waveform only data or decomposed to retrieve points.");
            }
            else
            {
                throw SPDProcessingException("Neither waveform or point returns have been defind.");
            }

            return points;
        };
        virtual std::vector<SPDPoint*>* getPointsWithinZParameters(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            std::vector<SPDPoint*> *points = new std::vector<SPDPoint*>();
            if((spdFile->getReceiveWaveformDefined() == SPD_TRUE) & (this->minNumReturns == 0))
            {
                throw SPDProcessingException("This metric can't be calculated from waveform data."
                                             " Set minNumReturns to 1 (default) to calculate using returns");
            }
            else if((spdFile->getDecomposedPtDefined() == SPD_TRUE) | (spdFile->getDiscretePtDefined() == SPD_TRUE))
            {
                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    if(((*iterPulses)->numberOfReturns >= minNumReturns) & ((*iterPulses)->numberOfReturns > 0))
                    {
                        if(returnID == SPD_ALL_RETURNS)
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->z <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(((*iterPts)->z >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(((*iterPts)->z >= lowThreshold) & ((*iterPts)->z <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_LAST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->back();
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if(boost::math::isnan(lowThreshold) & (pt->z <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if((pt->z >= lowThreshold) & boost::math::isnan(upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if((pt->z >= lowThreshold) & (pt->z <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                        }
                        else if(returnID == SPD_FIRST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->front();
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if(boost::math::isnan(lowThreshold) & (pt->z <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if((pt->z >= lowThreshold) & boost::math::isnan(upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if((pt->z >= lowThreshold) & (pt->z <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                        }
                        else if(returnID == SPD_FIRSTLAST_RETURNS)
                        {
                            SPDPoint *ptFirst = (*iterPulses)->pts->front();
                            SPDPoint *ptLast = NULL;
                            if((*iterPulses)->pts->size() > 1)
                            {
                                ptLast = (*iterPulses)->pts->back();
                            }
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                // First
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(ptFirst);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                         (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                         (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(ptFirst);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (ptFirst->classification != SPD_GROUND))
                                {
                                    points->push_back(ptFirst);
                                }
                                else if(ptFirst->classification == classification)
                                {
                                    points->push_back(ptFirst);
                                }

                                // Last
                                if(ptLast != NULL)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptLast);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptLast->classification == SPD_LOW_VEGETATION) |
                                             (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptLast->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptLast);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptLast->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptLast);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptLast);
                                    }
                                }
                            }
                            else if(boost::math::isnan(lowThreshold))
                            {
                                if(ptFirst->z <= upThreshold)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->z <= upThreshold)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(upThreshold))
                            {
                                if(ptFirst->z >= lowThreshold)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->z >= lowThreshold)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if((ptFirst->z >= lowThreshold) & (ptFirst->z <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if((ptLast->z >= lowThreshold) & (ptLast->z <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_NOTFIRST_RETURNS)
                        {
                            std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin();
                            ++iterPts;
                            for(; iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->z <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(((*iterPts)->z >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(((*iterPts)->z >= lowThreshold) & ((*iterPts)->z <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                            }
                        }
                        else
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->z <= upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                    }
                                }
                                else if(((*iterPts)->z >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                    }
                                }
                                else if(((*iterPts)->z >= lowThreshold) & ((*iterPts)->z <= upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else if(spdFile->getReceiveWaveformDefined() == SPD_TRUE)
            {
                throw SPDProcessingException("Use the waveform metrics for waveform only data or decomposed to retrieve points.");
            }
            else
            {
                throw SPDProcessingException("Neither waveform or point returns have been defind.");
            }

            return points;
        };
        virtual std::vector<SPDPoint*>* getPointsWithinAmplitudeParameters(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            std::vector<SPDPoint*> *points = new std::vector<SPDPoint*>();
            if((spdFile->getReceiveWaveformDefined() == SPD_TRUE) & (this->minNumReturns == 0))
            {
                throw SPDProcessingException("This metric can't be calculated from waveform data."
                                             " Set minNumReturns to 1 (default) to calculate using returns");
            }
            else if((spdFile->getDecomposedPtDefined() == SPD_TRUE) | (spdFile->getDiscretePtDefined() == SPD_TRUE))
            {
                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    if(((*iterPulses)->numberOfReturns >= minNumReturns) & ((*iterPulses)->numberOfReturns > 0))
                    {
                        if(returnID == SPD_ALL_RETURNS)
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_LAST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->back();
                            if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                            else if(boost::math::isnan(heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_FIRST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->front();
                            if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                            else if(boost::math::isnan(heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->amplitudeReturn >= lowThreshold) & (pt->amplitudeReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_FIRSTLAST_RETURNS)
                        {
                            SPDPoint *ptFirst = (*iterPulses)->pts->front();
                            SPDPoint *ptLast = NULL;
                            if((*iterPulses)->pts->size() > 1)
                            {
                                ptLast = (*iterPulses)->pts->back();
                            }
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                // First
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }
                                else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }
                                else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }

                                // Last
                                if(ptLast != NULL)
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                    else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                    else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(lowThreshold))
                            {
                                if(ptFirst->amplitudeReturn <= upThreshold)
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->amplitudeReturn <= upThreshold)
                                    {
                                        if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(upThreshold))
                            {
                                if(ptFirst->amplitudeReturn >= lowThreshold)
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->amplitudeReturn >= lowThreshold)
                                    {
                                        if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if((ptFirst->amplitudeReturn >= lowThreshold) & (ptFirst->amplitudeReturn <= upThreshold))
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if((ptLast->amplitudeReturn >= lowThreshold) & (ptLast->amplitudeReturn <= upThreshold))
                                    {
                                        if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_NOTFIRST_RETURNS)
                        {
                            std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin();
                            ++iterPts;
                            for(; iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                            }
                        }
                        else
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->amplitudeReturn >= lowThreshold) & ((*iterPts)->amplitudeReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else if(spdFile->getReceiveWaveformDefined() == SPD_TRUE)
            {
                throw SPDProcessingException("Use the waveform metrics for waveform only data or decomposed to retrieve points.");
            }
            else
            {
                throw SPDProcessingException("Neither waveform or point returns have been defind.");
            }

            return points;
        };
        virtual std::vector<SPDPoint*>* getPointsWithinRangeParameters(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            std::vector<SPDPoint*> *points = new std::vector<SPDPoint*>();
            if((spdFile->getReceiveWaveformDefined() == SPD_TRUE) & (this->minNumReturns == 0))
            {
                throw SPDProcessingException("Waveform metrics haven't been implemented for range."
                                             " Set minNumReturns to 1 (default) to calculate using returns.");
            }
            else if((spdFile->getDecomposedPtDefined() == SPD_TRUE) | (spdFile->getDiscretePtDefined() == SPD_TRUE))
            {
                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    if(((*iterPulses)->numberOfReturns >= minNumReturns) & ((*iterPulses)->numberOfReturns > 0))
                    {
                        if(returnID == SPD_ALL_RETURNS)
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->range <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(((*iterPts)->range >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(((*iterPts)->range >= lowThreshold) & ((*iterPts)->range <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_LAST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->back();
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if(boost::math::isnan(lowThreshold) & (pt->range <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if((pt->range >= lowThreshold) & boost::math::isnan(upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if((pt->range >= lowThreshold) & (pt->range <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                        }
                        else if(returnID == SPD_FIRST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->front();
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if(boost::math::isnan(lowThreshold) & (pt->range <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if((pt->range >= lowThreshold) & boost::math::isnan(upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                            else if((pt->range >= lowThreshold) & (pt->range <= upThreshold))
                            {
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((pt->classification == SPD_LOW_VEGETATION) |
                                         (pt->classification == SPD_MEDIUM_VEGETATION) |
                                         (pt->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(pt);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (pt->classification != SPD_GROUND))
                                {
                                    points->push_back(pt);
                                }
                                else if(pt->classification == classification)
                                {
                                    points->push_back(pt);
                                }
                            }
                        }
                        else if(returnID == SPD_FIRSTLAST_RETURNS)
                        {
                            SPDPoint *ptFirst = (*iterPulses)->pts->front();
                            SPDPoint *ptLast = NULL;
                            if((*iterPulses)->pts->size() > 1)
                            {
                                ptLast = (*iterPulses)->pts->back();
                            }
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                // First
                                if(classification == SPD_ALL_CLASSES)
                                {
                                    points->push_back(ptFirst);
                                }
                                else if((classification == SPD_VEGETATION) &
                                        ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                         (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                         (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                {
                                    points->push_back(ptFirst);
                                }
                                else if((classification == SPD_NOT_GROUND) &
                                        (ptFirst->classification != SPD_GROUND))
                                {
                                    points->push_back(ptFirst);
                                }
                                else if(ptFirst->classification == classification)
                                {
                                    points->push_back(ptFirst);
                                }

                                // Last
                                if(ptLast != NULL)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptLast);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptLast->classification == SPD_LOW_VEGETATION) |
                                             (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptLast->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptLast);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptLast->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptLast);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptLast);
                                    }
                                }
                            }
                            else if(boost::math::isnan(lowThreshold))
                            {
                                if(ptFirst->range <= upThreshold)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->range <= upThreshold)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(upThreshold))
                            {
                                if(ptFirst->range >= lowThreshold)
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->range >= lowThreshold)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                }
                            }
                            else
                            {
                                if((ptFirst->range >= lowThreshold) & (ptFirst->range <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if((ptLast->range >= lowThreshold) & (ptLast->range <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptLast->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_NOTFIRST_RETURNS)
                        {
                            std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin();
                            ++iterPts;
                            for(; iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->range <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(((*iterPts)->range >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                                else if(((*iterPts)->range >= lowThreshold) & ((*iterPts)->range <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                             ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                             ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            ((*iterPts)->classification != SPD_GROUND))
                                    {
                                        points->push_back(*iterPts);
                                    }
                                    else if((*iterPts)->classification == classification)
                                    {
                                        points->push_back(*iterPts);
                                    }
                                }
                            }
                        }
                        else
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & ((*iterPts)->range <= upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                    }
                                }
                                else if(((*iterPts)->range >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                    }
                                }
                                else if(((*iterPts)->range >= lowThreshold) & ((*iterPts)->range <= upThreshold))
                                {
                                    if(returnID == (*iterPts)->returnID)
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back(*iterPts);
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back(*iterPts);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else if(spdFile->getReceiveWaveformDefined() == SPD_TRUE)
            {
                throw SPDProcessingException("Use the waveform metrics for waveform only data or decomposed to retrieve points.");
            }
            else
            {
                throw SPDProcessingException("Neither waveform or point returns have been defind.");
            }
            return points;
        };
        virtual std::vector<SPDPoint*>* getPointsWithinWidthParameters(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            std::vector<SPDPoint*> *points = new std::vector<SPDPoint*>();
            if((spdFile->getReceiveWaveformDefined() == SPD_TRUE) & (this->minNumReturns == 0))
            {
                throw SPDProcessingException("Can't calculate width metrics using only waveform data, need to use returns."
                                             " Set minNumReturns to 1 (default) to calculate using returns.");
            }
            else if((spdFile->getDecomposedPtDefined() == SPD_TRUE) | (spdFile->getDiscretePtDefined() == SPD_TRUE))
            {
                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    if(((*iterPulses)->numberOfReturns >= minNumReturns) & ((*iterPulses)->numberOfReturns > 0))
                    {
                        if(returnID == SPD_ALL_RETURNS)
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_LAST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->back();
                            if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                            else if(boost::math::isnan(heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_FIRST_RETURNS)
                        {
                            SPDPoint *pt = (*iterPulses)->pts->front();
                            if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                            else if(boost::math::isnan(heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                            }
                            else if((pt->height >= heightLowThreshold) & (pt->height <= heightUpThreshold))
                            {
                                if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if(boost::math::isnan(lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }
                                else if((pt->widthReturn >= lowThreshold) & (pt->widthReturn <= upThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((pt->classification == SPD_LOW_VEGETATION) |
                                             (pt->classification == SPD_MEDIUM_VEGETATION) |
                                             (pt->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (pt->classification != SPD_GROUND))
                                    {
                                        points->push_back(pt);
                                    }
                                    else if(pt->classification == classification)
                                    {
                                        points->push_back(pt);
                                    }
                                }

                            }
                        }
                        else if(returnID == SPD_FIRSTLAST_RETURNS)
                        {
                            SPDPoint *ptFirst = (*iterPulses)->pts->front();
                            SPDPoint *ptLast = NULL;
                            if((*iterPulses)->pts->size() > 1)
                            {
                                ptLast = (*iterPulses)->pts->back();
                            }
                            if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                            {
                                // First
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }
                                else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }
                                else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                {
                                    if(classification == SPD_ALL_CLASSES)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_VEGETATION) &
                                            ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                             (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                             (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if((classification == SPD_NOT_GROUND) &
                                            (ptFirst->classification != SPD_GROUND))
                                    {
                                        points->push_back(ptFirst);
                                    }
                                    else if(ptFirst->classification == classification)
                                    {
                                        points->push_back(ptFirst);
                                    }
                                }

                                // Last
                                if(ptLast != NULL)
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                    else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                    else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                 (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptLast->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptLast->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptLast);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptLast);
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(lowThreshold))
                            {
                                if(ptFirst->widthReturn <= upThreshold)
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->widthReturn <= upThreshold)
                                    {
                                        if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                    }
                                }
                            }
                            else if(boost::math::isnan(upThreshold))
                            {
                                if(ptFirst->widthReturn >= lowThreshold)
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if(ptLast->widthReturn >= lowThreshold)
                                    {
                                        if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                    }
                                }
                            }
                            else
                            {
                                //First
                                if((ptFirst->widthReturn >= lowThreshold) & (ptFirst->widthReturn <= upThreshold))
                                {
                                    if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if(boost::math::isnan(heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                    else if((ptFirst->height >= heightLowThreshold) & (ptFirst->height <= heightUpThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                ((ptFirst->classification == SPD_LOW_VEGETATION) |
                                                 (ptFirst->classification == SPD_MEDIUM_VEGETATION) |
                                                 (ptFirst->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                (ptFirst->classification != SPD_GROUND))
                                        {
                                            points->push_back(ptFirst);
                                        }
                                        else if(ptFirst->classification == classification)
                                        {
                                            points->push_back(ptFirst);
                                        }
                                    }
                                }

                                if(ptLast != NULL)
                                {
                                    if((ptLast->widthReturn >= lowThreshold) & (ptLast->widthReturn <= upThreshold))
                                    {
                                        if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if(boost::math::isnan(heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                        else if((ptLast->height >= heightLowThreshold) & (ptLast->height <= heightUpThreshold))
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    ((ptLast->classification == SPD_LOW_VEGETATION) |
                                                     (ptLast->classification == SPD_MEDIUM_VEGETATION) |
                                                     (ptLast->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    (ptLast->classification != SPD_GROUND))
                                            {
                                                points->push_back(ptLast);
                                            }
                                            else if(ptLast->classification == classification)
                                            {
                                                points->push_back(ptLast);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else if(returnID == SPD_NOTFIRST_RETURNS)
                        {
                            std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin();
                            ++iterPts;
                            for(; iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(classification == SPD_ALL_CLASSES)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_VEGETATION) &
                                                (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                 ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((classification == SPD_NOT_GROUND) &
                                                ((*iterPts)->classification != SPD_GROUND))
                                        {
                                            points->push_back((*iterPts));
                                        }
                                        else if((*iterPts)->classification == classification)
                                        {
                                            points->push_back((*iterPts));
                                        }
                                    }
                                }
                            }
                        }
                        else
                        {
                            for(std::vector<SPDPoint*>::iterator iterPts = (*iterPulses)->pts->begin(); iterPts != (*iterPulses)->pts->end(); ++iterPts)
                            {
                                if(boost::math::isnan(heightUpThreshold) & boost::math::isnan(heightLowThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                }
                                else if(boost::math::isnan(heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & boost::math::isnan(heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                }
                                else if(((*iterPts)->height >= heightLowThreshold) & ((*iterPts)->height <= heightUpThreshold))
                                {
                                    if(boost::math::isnan(upThreshold) & boost::math::isnan(lowThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(boost::math::isnan(lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & boost::math::isnan(upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                    else if(((*iterPts)->widthReturn >= lowThreshold) & ((*iterPts)->widthReturn <= upThreshold))
                                    {
                                        if(returnID == (*iterPts)->returnID)
                                        {
                                            if(classification == SPD_ALL_CLASSES)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_VEGETATION) &
                                                    (((*iterPts)->classification == SPD_LOW_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_MEDIUM_VEGETATION) |
                                                     ((*iterPts)->classification == SPD_HIGH_VEGETATION)))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((classification == SPD_NOT_GROUND) &
                                                    ((*iterPts)->classification != SPD_GROUND))
                                            {
                                                points->push_back((*iterPts));
                                            }
                                            else if((*iterPts)->classification == classification)
                                            {
                                                points->push_back((*iterPts));
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            return points;
        };
        virtual double calcBinnedMode(std::vector<double> *values, float resolution) 
        {
            double mode = 0;
            try
            {
                if(resolution <= 0)
                {
                    throw SPDProcessingException("Resolution (for calculating Mode) needs to be greater than zero.");
                }
                if(values->size() > 0)
                {
                    double min = 0;
                    double max = 0;
                    gsl_stats_minmax(&min, &max, &(*values)[0], 1, values->size());
                   boost::uint_fast32_t numBins = 0;
                   boost::uint_fast32_t roundingAddition = 0;
                    try
                    {
                        if(resolution < 1)
                        {
                            roundingAddition = boost::numeric_cast<uint_fast32_t>(1/resolution);
                        }
                        else
                        {
                            roundingAddition = 1;
                        }

                        numBins = boost::numeric_cast<uint_fast32_t>(((max - min)/resolution)+roundingAddition);
                    }
                    catch(boost::numeric::negative_overflow& e)
                    {
                        throw SPDProcessingException(e.what());
                    }
                    catch(boost::numeric::positive_overflow& e)
                    {
                        throw SPDProcessingException(e.what());
                    }
                    catch(boost::numeric::bad_numeric_cast& e)
                    {
                        throw SPDProcessingException(e.what());
                    }

                    if(numBins > 0)
                    {
                       boost::uint_fast32_t *bins = new boost::uint_fast32_t[numBins];
                        double diff = 0;
                       boost::uint_fast32_t idx = 0;
                        for(std::vector<double>::iterator iterVals = values->begin(); iterVals != values->end(); ++iterVals)
                        {
                            diff = ((*iterVals) - min) / resolution;
                            try
                            {
                                idx = boost::numeric_cast<uint_fast32_t>(diff);
                            }
                            catch(boost::numeric::negative_overflow& e)
                            {
                                throw SPDProcessingException(e.what());
                            }
                            catch(boost::numeric::positive_overflow& e)
                            {
                                throw SPDProcessingException(e.what());
                            }
                            catch(boost::numeric::bad_numeric_cast& e)
                            {
                                throw SPDProcessingException(e.what());
                            }
                            ++bins[idx];
                        }

                       boost::uint_fast32_t maxIdx = 0;
                       boost::uint_fast32_t maxVal = 0;
                        for(boost::uint_fast32_t i = 0; i < numBins; ++i)
                        {
                            if(i == 0)
                            {
                                maxVal = bins[i];
                                maxIdx = i;
                            }
                            else if(bins[i] > maxVal)
                            {
                                maxVal = bins[i];
                                maxIdx = i;
                            }
                        }
                        delete[] bins;


                        mode = min + (((double)maxIdx) * resolution);
                    }
                    else
                    {
                        if(compare_double(min, max))
                        {
                            mode = min;
                        }
                        else
                        {
                            mode = NAN;
                        }
                    }
                }
                else
                {
                    mode = NAN;
                }
            }
            catch(SPDProcessingException &e)
            {
                throw e;
            }
            return mode;
        };
        virtual std::vector<double>* getPulseExpandedHistWithinHeightParameters(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) 
        {
            /**
            Assumes the pulse is a histogram using the DN for each bin as the number of counts.
            This function returns a vector of values with the number of times each value appears given by the waveform DN.binData

            Values where the DN is less than the noise threshold or where the height is < 0 are ignored.
            For example assuming the following waveform:

              4  |
                 | X
                 | X           X
              0  |_X___________X_________X_________X___
                   10m         5m        0m       -5m
            
            a vector would be returned containing:

            10,10,10,5,5,0
            
            */
            std::vector<double> *points = new std::vector<double>();
            // If there is waveform data and the minimum number of returns has been set to 0
            if((spdFile->getReceiveWaveformDefined() == SPD_TRUE))
            {
                double tmpX = 0;
                double tmpY = 0;
                double tmpH = 0;

                for(std::vector<SPDPulse*>::iterator iterPulses = pulses->begin(); iterPulses != pulses->end(); ++iterPulses)
                {
                    for(unsigned int s = 0; s < (*iterPulses)->numOfReceivedBins; s++)
                    {
                        // Get the DN of the digitised value and check
                        // this is above the noise threshold.
                        boost::uint_fast32_t pulseDNVal = (*iterPulses)->received[s];

                        if(pulseDNVal > (*iterPulses)->receiveWaveNoiseThreshold)
                        {
                            // Get the time of the digitised value, relative to the origin
                            double timeOffset = s * spdFile->getTemporalBinSpacing();

                            // Get the height of the digitised value using the height of the origin
                            // and the time offset within the pulse.
                            SPDConvertToCartesian((*iterPulses)->zenith, (*iterPulses)->azimuth, 
                                                (SPD_SPEED_OF_LIGHT_NS * timeOffset), (*iterPulses)->x0, (*iterPulses)->y0, (*iterPulses)->h0, &tmpX, &tmpY, &tmpH);
                            
                            bool addVals = false;
                            if((boost::math::isnan(this->upThreshold)) & (boost::math::isnan(this->lowThreshold)))
                            {
                                addVals = true;
                            }
                            else if((boost::math::isnan(this->lowThreshold)) & (tmpH <= this->upThreshold))
                            {
                                addVals = true;
                            }
                            else if((tmpH >= this->lowThreshold) & (boost::math::isnan(this->upThreshold)))
                            {
                                addVals = true;
                            }
                            else if((tmpH >= this->lowThreshold) & (tmpH <= this->upThreshold))
                            {
                                 addVals = true;
                            }

                            if(addVals)
                            {
                                for(boost::uint_fast32_t i = 0; i < pulseDNVal; ++i)
                                {
                                    points->push_back(tmpH);
                                }
                            }
                        }
                    }
                }
            }
            else
            {
                throw SPDProcessingException("Need to have a revieved waveform defined to use this function");
            }

            return points;
        };
        virtual double* binData(std::vector<double> *values, float resolution,boost::uint_fast32_t *numBins, double min, double max) 
        {
            double *bins = NULL;
            try
            {
                if(resolution <= 0)
                {
                    throw SPDProcessingException("Resolution (for calculating Mode) needs to be greater than zero.");
                }
                if(values->size() > 0)
                {
                    *numBins = 0;
                   boost::uint_fast32_t roundingAddition = 0;
                    try
                    {
                        if(resolution < 1)
                        {
                            roundingAddition = boost::numeric_cast<uint_fast32_t>(1/resolution);
                        }
                        else
                        {
                            roundingAddition = 1;
                        }

                        *numBins = boost::numeric_cast<uint_fast32_t>(((max - min)/resolution)+roundingAddition);
                    }
                    catch(boost::numeric::negative_overflow& e)
                    {
                        throw SPDProcessingException(e.what());
                    }
                    catch(boost::numeric::positive_overflow& e)
                    {
                        throw SPDProcessingException(e.what());
                    }
                    catch(boost::numeric::bad_numeric_cast& e)
                    {
                        throw SPDProcessingException(e.what());
                    }

                    if(*numBins > 0)
                    {
                        bins = new double[*numBins];
                        for(boost::uint_fast32_t i = 0; i < *numBins; ++i)
                        {
                            bins[i] = 0;
                        }

                        double diff = 0;
                       boost::uint_fast32_t idx = 0;
                        for(std::vector<double>::iterator iterVals = values->begin(); iterVals != values->end(); ++iterVals)
                        {
                            diff = ((*iterVals) - min) / resolution;
                            try
                            {
                                idx = boost::numeric_cast<uint_fast32_t>(diff);
                            }
                            catch(boost::numeric::negative_overflow& e)
                            {
                                throw SPDProcessingException(e.what());
                            }
                            catch(boost::numeric::positive_overflow& e)
                            {
                                throw SPDProcessingException(e.what());
                            }
                            catch(boost::numeric::bad_numeric_cast& e)
                            {
                                throw SPDProcessingException(e.what());
                            }
                            bins[idx] += 1.0;
                        }
                    }
                    else
                    {
                        throw SPDProcessingException("No bins were found.");
                    }
                }
                else
                {
                    throw SPDProcessingException("No values passed to be binned.");
                }
            }
            catch(SPDProcessingException &e)
            {
                throw e;
            }
            return bins;
        };
       boost::int_fast16_t returnID;
       boost::int_fast16_t classification;
       boost::uint_fast16_t minNumReturns;
        float upThreshold;
        float lowThreshold;
        float heightUpThreshold;
        float heightLowThreshold;
	};

    // Num of Returns metrics.

    class DllExport SPDMetricCalcNumPulses : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumPulses(boost::uint_fast16_t minNumReturns=1):SPDMetricCalc(SPD_ALL_RETURNS, SPD_ALL_CLASSES, minNumReturns, 0, 0, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumPulses(){};
	};

    class DllExport SPDMetricCalcCanopyCover : public SPDMetricCalc
	{
	public:
		SPDMetricCalcCanopyCover(float resolution, float radius,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
            this->radius = radius;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcCanopyCover(){};
    protected:
        float resolution;
        float radius;
	};

    class DllExport SPDMetricCalcCanopyCoverPercent : public SPDMetricCalc
	{
	public:
		SPDMetricCalcCanopyCoverPercent(float resolution, float radius,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
            this->radius = radius;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcCanopyCoverPercent(){};
    protected:
        float resolution;
        float radius;
	};




    // Height Metrics..

    class DllExport SPDMetricCalcLeeOpennessHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcLeeOpennessHeight(float vRes,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->vRes = vRes;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcLeeOpennessHeight(){};
    protected:
        float vRes;
	};

    class DllExport SPDMetricCalcNumReturnsHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsHeight(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsHeight(){};
	};

    class DllExport SPDMetricCalcSumHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcSumHeight(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcSumHeight(){};
	};

    class DllExport SPDMetricCalcMeanHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMeanHeight(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMeanHeight(){};
	};

    class DllExport SPDMetricCalcMedianHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMedianHeight(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMedianHeight(){};
	};

    class DllExport SPDMetricCalcModeHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcModeHeight(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcModeHeight(){};
    protected:
        float resolution;
	};

    class DllExport SPDMetricCalcMinHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMinHeight(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMinHeight(){};
	};

    class DllExport SPDMetricCalcMaxHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMaxHeight(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMaxHeight(){};
	};

    class DllExport SPDMetricCalcDominantHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcDominantHeight(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcDominantHeight(){};
    protected:
        float resolution;
	};

    class DllExport SPDMetricCalcStdDevHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcStdDevHeight(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcStdDevHeight(){};
	};

    class DllExport SPDMetricCalcVarianceHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcVarianceHeight(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcVarianceHeight(){};
    private:
        float threshold;
	};

    class DllExport SPDMetricCalcAbsDeviationHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcAbsDeviationHeight(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcAbsDeviationHeight(){};
	};

    class DllExport SPDMetricCalcCoefficientOfVariationHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcCoefficientOfVariationHeight(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcCoefficientOfVariationHeight(){};
	};

    class DllExport SPDMetricCalcPercentileHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcPercentileHeight(boost::uint_fast16_t percentile,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->percentile = percentile;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPercentileHeight(){};
    private:
       boost::uint_fast16_t percentile;
	};

    class DllExport SPDMetricCalcSkewnessHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcSkewnessHeight(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcSkewnessHeight(){};
	};

    class DllExport SPDMetricCalcPersonModeSkewnessHeight : public SPDMetricCalc
	{
	public:
        SPDMetricCalcPersonModeSkewnessHeight(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPersonModeSkewnessHeight(){};
    protected:
        float resolution;
	};

    class DllExport SPDMetricCalcPersonMedianSkewnessHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcPersonMedianSkewnessHeight(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPersonMedianSkewnessHeight(){};
	};

    class DllExport SPDMetricCalcKurtosisHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcKurtosisHeight(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcKurtosisHeight(){};
	};

    class DllExport SPDMetricCalcNumReturnsAboveMetricHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsAboveMetricHeight(SPDMetric *metric,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){
            this->metric = metric;
		};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsAboveMetricHeight(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricCalcNumReturnsBelowMetricHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsBelowMetricHeight(SPDMetric *metric,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){
		    this->metric = metric;
		};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsBelowMetricHeight(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricCalcWeibullAlphaHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcWeibullAlphaHeight(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
            this->mpConfigValues = new mp_config();
            mpConfigValues->ftol = 1e-10;
            mpConfigValues->xtol = 1e-10;
            mpConfigValues->gtol = 1e-10;
            mpConfigValues->epsfcn = MP_MACHEP0;
            mpConfigValues->stepfactor = 100.0;
            mpConfigValues->covtol = 1e-14;
            mpConfigValues->maxiter = 5;
            mpConfigValues->maxfev = 0;
            mpConfigValues->nprint = 1;
            mpConfigValues->douserscale = 0;
            mpConfigValues->nofinitecheck = 0;
            mpConfigValues->iterproc = 0;

            this->mpResultsValues = new mp_result();
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcWeibullAlphaHeight()
        {
            delete mpConfigValues;
            delete mpResultsValues;
        };
    protected:
        float resolution;
        mp_config *mpConfigValues;
		mp_result *mpResultsValues;
	};

    class DllExport SPDMetricCalcWeibullBetaHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcWeibullBetaHeight(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
            this->mpConfigValues = new mp_config();
            mpConfigValues->ftol = 1e-10;
            mpConfigValues->xtol = 1e-10;
            mpConfigValues->gtol = 1e-10;
            mpConfigValues->epsfcn = MP_MACHEP0;
            mpConfigValues->stepfactor = 100.0;
            mpConfigValues->covtol = 1e-14;
            mpConfigValues->maxiter = 5;
            mpConfigValues->maxfev = 0;
            mpConfigValues->nprint = 1;
            mpConfigValues->douserscale = 0;
            mpConfigValues->nofinitecheck = 0;
            mpConfigValues->iterproc = 0;

            this->mpResultsValues = new mp_result();
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcWeibullBetaHeight()
        {
            delete mpConfigValues;
            delete mpResultsValues;
        };
    protected:
        float resolution;
        mp_config *mpConfigValues;
		mp_result *mpResultsValues;
	};

    class DllExport SPDMetricCalcWeibullQuantileRangeHeight : public SPDMetricCalc
	{
	public:
		SPDMetricCalcWeibullQuantileRangeHeight(float resolution, float interval,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
            this->interval = interval;

            this->mpConfigValues = new mp_config();
            mpConfigValues->ftol = 1e-10;
            mpConfigValues->xtol = 1e-10;
            mpConfigValues->gtol = 1e-10;
            mpConfigValues->epsfcn = MP_MACHEP0;
            mpConfigValues->stepfactor = 100.0;
            mpConfigValues->covtol = 1e-14;
            mpConfigValues->maxiter = 5;
            mpConfigValues->maxfev = 0;
            mpConfigValues->nprint = 1;
            mpConfigValues->douserscale = 0;
            mpConfigValues->nofinitecheck = 0;
            mpConfigValues->iterproc = 0;

            this->mpResultsValues = new mp_result();
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcWeibullQuantileRangeHeight()
        {
            delete mpConfigValues;
            delete mpResultsValues;
        };
    protected:
        float resolution;
        float interval;
        mp_config *mpConfigValues;
		mp_result *mpResultsValues;
	};




    // Z Metrics..

    class DllExport SPDMetricCalcNumReturnsZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsZ(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsZ(){};
	};

    class DllExport SPDMetricCalcSumZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcSumZ(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcSumZ(){};
	};

    class DllExport SPDMetricCalcMeanZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMeanZ(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMeanZ(){};
	};

    class DllExport SPDMetricCalcMedianZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMedianZ(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMedianZ(){};
	};

    class DllExport SPDMetricCalcModeZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcModeZ(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcModeZ(){};
    protected:
        float resolution;
	};

    class DllExport SPDMetricCalcMinZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMinZ(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMinZ(){};
	};

    class DllExport SPDMetricCalcMaxZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMaxZ(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMaxZ(){};
	};

    class DllExport SPDMetricCalcStdDevZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcStdDevZ(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcStdDevZ(){};
	};

    class DllExport SPDMetricCalcVarianceZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcVarianceZ(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcVarianceZ(){};
    private:
        float threshold;
	};

    class DllExport SPDMetricCalcAbsDeviationZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcAbsDeviationZ(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcAbsDeviationZ(){};
	};

    class DllExport SPDMetricCalcCoefficientOfVariationZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcCoefficientOfVariationZ(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcCoefficientOfVariationZ(){};
	};

    class DllExport SPDMetricCalcPercentileZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcPercentileZ(boost::uint_fast16_t percentile,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->percentile = percentile;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPercentileZ(){};
    private:
       boost::uint_fast16_t percentile;
	};

    class DllExport SPDMetricCalcSkewnessZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcSkewnessZ(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcSkewnessZ(){};
	};

    class DllExport SPDMetricCalcPersonModeSkewnessZ : public SPDMetricCalc
	{
	public:
        SPDMetricCalcPersonModeSkewnessZ(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPersonModeSkewnessZ(){};
    protected:
        float resolution;
	};

    class DllExport SPDMetricCalcPersonMedianSkewnessZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcPersonMedianSkewnessZ(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPersonMedianSkewnessZ(){};
	};

    class DllExport SPDMetricCalcKurtosisZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcKurtosisZ(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcKurtosisZ(){};
	};

    class DllExport SPDMetricCalcNumReturnsAboveMetricZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsAboveMetricZ(SPDMetric *metric,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){
            this->metric = metric;
		};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsAboveMetricZ(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricCalcNumReturnsBelowMetricZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsBelowMetricZ(SPDMetric *metric,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){
		    this->metric = metric;
		};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsBelowMetricZ(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricCalcWeibullAlphaZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcWeibullAlphaZ(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
            this->mpConfigValues = new mp_config();
            mpConfigValues->ftol = 1e-10;
            mpConfigValues->xtol = 1e-10;
            mpConfigValues->gtol = 1e-10;
            mpConfigValues->epsfcn = MP_MACHEP0;
            mpConfigValues->stepfactor = 100.0;
            mpConfigValues->covtol = 1e-14;
            mpConfigValues->maxiter = 5;
            mpConfigValues->maxfev = 0;
            mpConfigValues->nprint = 1;
            mpConfigValues->douserscale = 0;
            mpConfigValues->nofinitecheck = 0;
            mpConfigValues->iterproc = 0;

            this->mpResultsValues = new mp_result();
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcWeibullAlphaZ()
        {
            delete mpConfigValues;
            delete mpResultsValues;
        };
    protected:
        float resolution;
        mp_config *mpConfigValues;
		mp_result *mpResultsValues;
	};

    class DllExport SPDMetricCalcWeibullBetaZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcWeibullBetaZ(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
            this->mpConfigValues = new mp_config();
            mpConfigValues->ftol = 1e-10;
            mpConfigValues->xtol = 1e-10;
            mpConfigValues->gtol = 1e-10;
            mpConfigValues->epsfcn = MP_MACHEP0;
            mpConfigValues->stepfactor = 100.0;
            mpConfigValues->covtol = 1e-14;
            mpConfigValues->maxiter = 5;
            mpConfigValues->maxfev = 0;
            mpConfigValues->nprint = 1;
            mpConfigValues->douserscale = 0;
            mpConfigValues->nofinitecheck = 0;
            mpConfigValues->iterproc = 0;

            this->mpResultsValues = new mp_result();
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcWeibullBetaZ()
        {
            delete mpConfigValues;
            delete mpResultsValues;
        };
    protected:
        float resolution;
        mp_config *mpConfigValues;
		mp_result *mpResultsValues;
	};

    class DllExport SPDMetricCalcWeibullQuantileRangeZ : public SPDMetricCalc
	{
	public:
		SPDMetricCalcWeibullQuantileRangeZ(float resolution, float interval,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
            this->interval = interval;

            this->mpConfigValues = new mp_config();
            mpConfigValues->ftol = 1e-10;
            mpConfigValues->xtol = 1e-10;
            mpConfigValues->gtol = 1e-10;
            mpConfigValues->epsfcn = MP_MACHEP0;
            mpConfigValues->stepfactor = 100.0;
            mpConfigValues->covtol = 1e-14;
            mpConfigValues->maxiter = 5;
            mpConfigValues->maxfev = 0;
            mpConfigValues->nprint = 1;
            mpConfigValues->douserscale = 0;
            mpConfigValues->nofinitecheck = 0;
            mpConfigValues->iterproc = 0;

            this->mpResultsValues = new mp_result();
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcWeibullQuantileRangeZ()
        {
            delete mpConfigValues;
            delete mpResultsValues;
        };
    protected:
        float resolution;
        float interval;
        mp_config *mpConfigValues;
		mp_result *mpResultsValues;
	};






    // Amplitude Metrics

    class DllExport SPDMetricCalcNumReturnsAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsAmplitude(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsAmplitude(){};
	};

    class DllExport SPDMetricCalcSumAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcSumAmplitude(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcSumAmplitude(){};
	};

    class DllExport SPDMetricCalcMeanAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMeanAmplitude(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMeanAmplitude(){};
	};

    class DllExport SPDMetricCalcMedianAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMedianAmplitude(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMedianAmplitude(){};
	};

    class DllExport SPDMetricCalcModeAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcModeAmplitude(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold)
        {
            this->resolution = resolution;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcModeAmplitude(){};
    protected:
        float resolution;
	};

    class DllExport SPDMetricCalcMinAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMinAmplitude(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMinAmplitude(){};
	};

    class DllExport SPDMetricCalcMaxAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMaxAmplitude(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMaxAmplitude(){};
	};

    class DllExport SPDMetricCalcStdDevAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcStdDevAmplitude(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcStdDevAmplitude(){};
	};

    class DllExport SPDMetricCalcVarianceAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcVarianceAmplitude(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcVarianceAmplitude(){};
    private:
        float threshold;
	};

    class DllExport SPDMetricCalcAbsDeviationAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcAbsDeviationAmplitude(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcAbsDeviationAmplitude(){};
	};

    class DllExport SPDMetricCalcCoefficientOfVariationAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcCoefficientOfVariationAmplitude(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcCoefficientOfVariationAmplitude(){};
	};

    class DllExport SPDMetricCalcPercentileAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcPercentileAmplitude(boost::uint_fast16_t percentile,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold)
        {
            this->percentile = percentile;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPercentileAmplitude(){};
    private:
       boost::uint_fast16_t percentile;
	};

    class DllExport SPDMetricCalcSkewnessAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcSkewnessAmplitude(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcSkewnessAmplitude(){};
	};

    class DllExport SPDMetricCalcPersonModeSkewnessAmplitude : public SPDMetricCalc
	{
	public:
        SPDMetricCalcPersonModeSkewnessAmplitude(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold)
        {
            this->resolution = resolution;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPersonModeSkewnessAmplitude(){};
    protected:
        float resolution;
	};

    class DllExport SPDMetricCalcPersonMedianSkewnessAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcPersonMedianSkewnessAmplitude(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPersonMedianSkewnessAmplitude(){};
	};

    class DllExport SPDMetricCalcKurtosisAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcKurtosisAmplitude(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcKurtosisAmplitude(){};
	};

    class DllExport SPDMetricCalcNumReturnsAboveMetricAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsAboveMetricAmplitude(SPDMetric *metric,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){
            this->metric = metric;
		};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsAboveMetricAmplitude(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricCalcNumReturnsBelowMetricAmplitude : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsBelowMetricAmplitude(SPDMetric *metric,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){
		    this->metric = metric;
		};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsBelowMetricAmplitude(){};
    private:
        SPDMetric *metric;
	};







    // Range metrics

    class DllExport SPDMetricCalcNumReturnsRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsRange(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsRange(){};
	};

    class DllExport SPDMetricCalcSumRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcSumRange(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcSumRange(){};
	};

    class DllExport SPDMetricCalcMeanRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMeanRange(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMeanRange(){};
	};

    class DllExport SPDMetricCalcMedianRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMedianRange(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMedianRange(){};
	};

    class DllExport SPDMetricCalcModeRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcModeRange(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcModeRange(){};
    protected:
        float resolution;
	};

    class DllExport SPDMetricCalcMinRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMinRange(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMinRange(){};
	};

    class DllExport SPDMetricCalcMaxRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMaxRange(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMaxRange(){};
	};

    class DllExport SPDMetricCalcStdDevRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcStdDevRange(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcStdDevRange(){};
	};

    class DllExport SPDMetricCalcVarianceRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcVarianceRange(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcVarianceRange(){};
    private:
        float threshold;
	};

    class DllExport SPDMetricCalcAbsDeviationRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcAbsDeviationRange(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcAbsDeviationRange(){};
	};

    class DllExport SPDMetricCalcCoefficientOfVariationRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcCoefficientOfVariationRange(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcCoefficientOfVariationRange(){};
	};

    class DllExport SPDMetricCalcPercentileRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcPercentileRange(boost::uint_fast16_t percentile,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->percentile = percentile;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPercentileRange(){};
    private:
       boost::uint_fast16_t percentile;
	};

    class DllExport SPDMetricCalcSkewnessRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcSkewnessRange(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcSkewnessRange(){};
	};

    class DllExport SPDMetricCalcPersonModeSkewnessRange : public SPDMetricCalc
	{
	public:
        SPDMetricCalcPersonModeSkewnessRange(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPersonModeSkewnessRange(){};
    protected:
        float resolution;
	};

    class DllExport SPDMetricCalcPersonMedianSkewnessRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcPersonMedianSkewnessRange(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPersonMedianSkewnessRange(){};
	};

    class DllExport SPDMetricCalcKurtosisRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcKurtosisRange(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcKurtosisRange(){};
	};

    class DllExport SPDMetricCalcNumReturnsAboveMetricRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsAboveMetricRange(SPDMetric *metric,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){
            this->metric = metric;
		};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsAboveMetricRange(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricCalcNumReturnsBelowMetricRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsBelowMetricRange(SPDMetric *metric,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){
            this->metric = metric;
		};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsBelowMetricRange(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricCalcWeibullAlphaRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcWeibullAlphaRange(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
            this->mpConfigValues = new mp_config();
            mpConfigValues->ftol = 1e-10;
            mpConfigValues->xtol = 1e-10;
            mpConfigValues->gtol = 1e-10;
            mpConfigValues->epsfcn = MP_MACHEP0;
            mpConfigValues->stepfactor = 100.0;
            mpConfigValues->covtol = 1e-14;
            mpConfigValues->maxiter = 5;
            mpConfigValues->maxfev = 0;
            mpConfigValues->nprint = 1;
            mpConfigValues->douserscale = 0;
            mpConfigValues->nofinitecheck = 0;
            mpConfigValues->iterproc = 0;

            this->mpResultsValues = new mp_result();
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcWeibullAlphaRange()
        {
            delete mpConfigValues;
            delete mpResultsValues;
        };
    protected:
        float resolution;
        mp_config *mpConfigValues;
		mp_result *mpResultsValues;
	};

    class DllExport SPDMetricCalcWeibullBetaRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcWeibullBetaRange(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
            this->mpConfigValues = new mp_config();
            mpConfigValues->ftol = 1e-10;
            mpConfigValues->xtol = 1e-10;
            mpConfigValues->gtol = 1e-10;
            mpConfigValues->epsfcn = MP_MACHEP0;
            mpConfigValues->stepfactor = 100.0;
            mpConfigValues->covtol = 1e-14;
            mpConfigValues->maxiter = 5;
            mpConfigValues->maxfev = 0;
            mpConfigValues->nprint = 1;
            mpConfigValues->douserscale = 0;
            mpConfigValues->nofinitecheck = 0;
            mpConfigValues->iterproc = 0;

            this->mpResultsValues = new mp_result();
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcWeibullBetaRange()
        {
            delete mpConfigValues;
            delete mpResultsValues;
        };
    protected:
        float resolution;
        mp_config *mpConfigValues;
		mp_result *mpResultsValues;
	};

    class DllExport SPDMetricCalcWeibullQuantileRangeRange : public SPDMetricCalc
	{
	public:
		SPDMetricCalcWeibullQuantileRangeRange(float resolution, float interval,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0)
        {
            this->resolution = resolution;
            this->interval = interval;

            this->mpConfigValues = new mp_config();
            mpConfigValues->ftol = 1e-10;
            mpConfigValues->xtol = 1e-10;
            mpConfigValues->gtol = 1e-10;
            mpConfigValues->epsfcn = MP_MACHEP0;
            mpConfigValues->stepfactor = 100.0;
            mpConfigValues->covtol = 1e-14;
            mpConfigValues->maxiter = 5;
            mpConfigValues->maxfev = 0;
            mpConfigValues->nprint = 1;
            mpConfigValues->douserscale = 0;
            mpConfigValues->nofinitecheck = 0;
            mpConfigValues->iterproc = 0;

            this->mpResultsValues = new mp_result();
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcWeibullQuantileRangeRange()
        {
            delete mpConfigValues;
            delete mpResultsValues;
        };
    protected:
        float resolution;
        float interval;
        mp_config *mpConfigValues;
		mp_result *mpResultsValues;
	};





    // Width Metrics

    class DllExport SPDMetricCalcNumReturnsWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsWidth(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsWidth(){};
	};

    class DllExport SPDMetricCalcSumWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcSumWidth(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcSumWidth(){};
	};

    class DllExport SPDMetricCalcMeanWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMeanWidth(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMeanWidth(){};
	};

    class DllExport SPDMetricCalcMedianWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMedianWidth(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMedianWidth(){};
	};

    class DllExport SPDMetricCalcModeWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcModeWidth(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold)
        {
            this->resolution = resolution;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcModeWidth(){};
    protected:
        float resolution;
	};

    class DllExport SPDMetricCalcMinWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMinWidth(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMinWidth(){};
	};

    class DllExport SPDMetricCalcMaxWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcMaxWidth(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcMaxWidth(){};
	};

    class DllExport SPDMetricCalcStdDevWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcStdDevWidth(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcStdDevWidth(){};
	};

    class DllExport SPDMetricCalcVarianceWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcVarianceWidth(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcVarianceWidth(){};
    private:
        float threshold;
	};

    class DllExport SPDMetricCalcAbsDeviationWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcAbsDeviationWidth(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcAbsDeviationWidth(){};
	};

    class DllExport SPDMetricCalcCoefficientOfVariationWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcCoefficientOfVariationWidth(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcCoefficientOfVariationWidth(){};
	};

    class DllExport SPDMetricCalcPercentileWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcPercentileWidth(boost::uint_fast16_t percentile,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold)
        {
            this->percentile = percentile;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPercentileWidth(){};
    private:
       boost::uint_fast16_t percentile;
	};

    class DllExport SPDMetricCalcSkewnessWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcSkewnessWidth(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcSkewnessWidth(){};
	};

    class DllExport SPDMetricCalcPersonModeSkewnessWidth : public SPDMetricCalc
	{
	public:
        SPDMetricCalcPersonModeSkewnessWidth(float resolution,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold)
        {
            this->resolution = resolution;
        };
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPersonModeSkewnessWidth(){};
    protected:
        float resolution;
	};

    class DllExport SPDMetricCalcPersonMedianSkewnessWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcPersonMedianSkewnessWidth(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcPersonMedianSkewnessWidth(){};
	};

    class DllExport SPDMetricCalcKurtosisWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcKurtosisWidth(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcKurtosisWidth(){};
	};

    class DllExport SPDMetricCalcNumReturnsAboveMetricWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsAboveMetricWidth(SPDMetric *metric,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){
            this->metric = metric;
		};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsAboveMetricWidth(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricCalcNumReturnsBelowMetricWidth : public SPDMetricCalc
	{
	public:
		SPDMetricCalcNumReturnsBelowMetricWidth(SPDMetric *metric,boost::int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1, float heightUpThreshold=-1, float heightLowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, heightUpThreshold, heightLowThreshold){
            this->metric = metric;
		};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcNumReturnsBelowMetricWidth(){};
    private:
        SPDMetric *metric;
	};

    class DllExport SPDMetricCalcHeightOfMedianEnergy : public SPDMetricCalc
    /**
    Height of Median Energy (HOME)
    */
	{
	public:
		SPDMetricCalcHeightOfMedianEnergy(int_fast16_t returnID=-1,boost::int_fast16_t classification=-1,boost::uint_fast16_t minNumReturns=1, float upThreshold=-1, float lowThreshold=-1):SPDMetricCalc(returnID, classification, minNumReturns, upThreshold, lowThreshold, 0, 0){};
		double calcValue(std::vector<SPDPulse*> *pulses, SPDFile *spdFile, OGRGeometry *geom) ;
		virtual ~SPDMetricCalcHeightOfMedianEnergy(){};
	};

}

#endif

